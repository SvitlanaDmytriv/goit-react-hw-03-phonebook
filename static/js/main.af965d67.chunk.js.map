{"version":3,"sources":["component/ContactList/ContactList.module.css","component/ContactFilter/ContactFilter.module.css","component/ContactForm/ContactForm.module.css","component/ContactForm/ContactForm.js","component/ContactFilter/ContactFilter.js","component/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","phoneInputId","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addContact","reset","this","className","s","form","onSubmit","label","htmlFor","input","type","id","pattern","title","required","onChange","btn","Component","ContactFilter","ContactList","contactsList","deleteContact","list","map","listItem","onClick","App","contacts","filterValue","data","contact","toLocaleLowerCase","includes","alert","newContact","prevState","filter","сhangeFilter","filterContacts","normalizedFilter","toLowerCase","visibleFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af965d67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__hRWIW\",\"listItem\":\"ContactList_listItem__PkOHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__1cXEN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2GoJq\",\"label\":\"ContactForm_label__3sAHK\",\"input\":\"ContactForm_input__Q4o0F\",\"btn\":\"ContactForm_btn__3p2dX\"};","import { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  phoneInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.addContact({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    const { nameInputId, phoneInputId, handleChange, handleSubmit } = this;\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n\n        <label className={s.label} htmlFor={phoneInputId}>\n          Number\n        </label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={phoneInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactFilter.module.css';\n\nfunction ContactFilter({ value, onChange }) {\n  return (\n    <label>\n      <span className={s.label}>Find contacts by name</span>\n      <input type=\"text\" value={value} onChange={onChange}></input>\n    </label>\n  );\n}\n\nContactFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default ContactFilter;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nfunction ContactList({ contactsList, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contactsList.map(({ name, number, id }) => (\n        <li key={id} className={s.listItem}>\n          <p>\n            {name} : {number}\n          </p>\n\n          <button type=\"submit\" onClick={() => deleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contactsList: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import './App.css';\n\nimport { Component } from 'react';\nimport shortid from 'shortid';\n\nimport ContactForm from './component/ContactForm/ContactForm';\nimport ContactFilter from './component/ContactFilter/ContactFilter';\nimport ContactList from './component/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filterValue: '',\n  };\n\n  addContact = data => {\n    const contactСomparison = this.state.contacts\n      .map(contact => contact.name.toLocaleLowerCase())\n      .includes(data.name.toLocaleLowerCase());\n\n    if (contactСomparison) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      const newContact = { ...data, id: shortid.generate() };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  сhangeFilter = e => {\n    const { value } = e.target;\n    this.setState({ filterValue: value });\n  };\n\n  filterContacts = () => {\n    const { filterValue, contacts } = this.state;\n    const normalizedFilter = filterValue.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return visibleContacts;\n  };\n\n  render() {\n    const { addContact, сhangeFilter, deleteContact } = this;\n    const { filterValue } = this.state;\n    const visibleFilter = this.filterContacts();\n    return (\n      <div className=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm addContact={addContact} />\n        <h2>Contacts</h2>\n        <ContactFilter value={filterValue} onChange={сhangeFilter} />\n        <ContactList\n          contactsList={visibleFilter}\n          deleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}